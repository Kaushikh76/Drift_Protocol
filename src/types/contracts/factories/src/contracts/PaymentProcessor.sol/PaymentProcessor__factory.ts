/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PaymentProcessor,
  PaymentProcessorInterface,
} from "../../../../src/contracts/PaymentProcessor.sol/PaymentProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hyperlaneMailbox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentGateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fanTokenAmount",
        type: "uint256",
      },
    ],
    name: "FanTokenSwapCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFanTokens",
        type: "uint256",
      },
    ],
    name: "PaymentCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chzAmount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentSentToMerchant",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chzAmount",
        type: "uint256",
      },
    ],
    name: "getFanTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
    ],
    name: "getProcessedPayment",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "paymentId",
            type: "string",
          },
          {
            internalType: "address",
            name: "merchant",
            type: "address",
          },
          {
            internalType: "address",
            name: "fanToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fanTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chzReceived",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fanTokensSent",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PaymentProcessor.ProcessedPayment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hyperlaneMailbox",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentGateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "processedPayments",
    outputs: [
      {
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fanTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chzReceived",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fanTokensSent",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sepoliaDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mailbox",
        type: "address",
      },
    ],
    name: "setHyperlaneMailbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    name: "setPaymentGateway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "setSepoliaDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawCHZ",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461016c57601f6116c838819003918201601f19168301916001600160401b0383118484101761017157808492604094855283398101031261016c57610052602061004b83610187565b9201610187565b9060016000556001549060018060a01b03199133838216176001556040519360018060a01b0391823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a381600254931694851561012a5750169283156100e55762aa36a760a01b9160018060c01b0319161717600255600354161760035560405161152c908161019c8239f35b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206761746577617920616464726573730000000000000000006044820152606490fd5b62461bcd60e51b815260206004820152601760248201527f496e76616c6964206d61696c626f7820616464726573730000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361016c5756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c9081630c67acde146111f45750806310eedf48146111b457806311069a831461105c5780631a6e4db41461103357806356d5d475146105c55780636d7c78081461057d578063715018a61461051f57806388ba16ab146104f05780638da5cb5b146104c75780639b931abf146103f35780639e281a9814610310578063a2038e1e146102cc578063ca2169d4146102a3578063d125e992146101de578063f2fde38b146101185763fd01a7ee0361000f5734610115576020366003190112610115576100ef611219565b6100f7611452565b60018060a01b03166001600160601b0360a01b600354161760035580f35b80fd5b503461011557602036600319011261011557610132611219565b61013a611452565b6001600160a01b0390811690811561018a57600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346101155760403660031901126101155761022f9060206101fe611219565b60405163449e815d60e01b81526001600160a01b039091166004820152602480359082015292839081906044820190565b038173fbef475155294d7ef054f2b79b908c91a9914d825afa9081156102975790610260575b602090604051908152f35b506020813d821161028f575b81610279602093836112eb565b8101031261028a5760209051610255565b600080fd5b3d915061026c565b604051903d90823e3d90fd5b50346101155780600319360112610115576003546040516001600160a01b039091168152602090f35b50346101155780600319360112610115576102e5611452565b8080808060018060a01b03600154164790828215610307575bf1156102975780f35b506108fc6102fe565b50346101155760403660031901126101155761032a611219565b610332611452565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602480359082015291602091839160449183918791165af19081156103e85782916103ba575b50156103815780f35b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b6103db915060203d81116103e1575b6103d381836112eb565b8101906114de565b38610378565b503d6103c9565b6040513d84823e3d90fd5b5034610115576020366003190112610115576004359067ffffffffffffffff82116101155761049d610440602061042d3660048701611354565b816040519382858094519384920161125d565b81016004815203019020610453816113ac565b9060018060a01b039081600182015416916002820154169060038101546004820154600583015491600760ff60068601541694015494604051988998610100808b528a0190611280565b96602089015260408801526060870152608086015260a0850152151560c084015260e08301520390f35b50346101155780600319360112610115576001546040516001600160a01b039091168152602090f35b50346101155760203660031901126101155760ff60406020926004358152600584522054166040519015158152f35b5034610115578060031936011261011557610538611452565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610115576020366003190112610115576105976112a5565b61059f611452565b6002805463ffffffff60a01b191660a09290921b63ffffffff60a01b1691909117905580f35b5034610115576060366003190112610115576105df6112a5565b60443567ffffffffffffffff8111610ef4576105ff90369060040161122f565b600254919290916001600160a01b0381163303610ff5576002855414610fb0576002855563ffffffff809160a01c16911603610f73576003546001600160a01b0390811660243590911603610f3d5761065936828461130d565b60208151910120808452600560205260ff604085205416610ef8578352600560205260408320805460ff191660011790558101608082820312610ef45781359067ffffffffffffffff8211610ef0576106b3918301611354565b6106bf602083016114aa565b906106cc604084016114aa565b92815115610eb6576001600160a01b03831615610e7e576001600160a01b03841615610e4557606081013515610e005747908115610dc95761070d836114be565b7fd78903455e3bfe57a34c1b193ad1751a51ca1b1075f0562c334e3ea6a28148896020604051858152a2606060405191610746836112b8565b84835260018060a01b038616602084015260018060a01b0387166040840152013560608201528160808201528560a08201528560c08201524260e082015260405160208185516107998183858a0161125d565b8101600481520301902090805180519067ffffffffffffffff8211610db5576107c28454611372565b601f8111610d74575b50602090601f8311600114610d085791806007949260e0948c92610cfd575b50508160011b916000199060031b1c19161784555b6020818101516001860180546001600160a01b039283166001600160a01b031991821617909155604080850151600289018054918516919093161790915560608401516003880155608084015160048089019190915560a0850151600589015560c085015160068901805460ff191691151560ff16919091179055949093015194909501939093555163449e815d60e01b81529287169083015260248201839052818060448101038173fbef475155294d7ef054f2b79b908c91a9914d825afa908115610b8e578691610ccb575b5015610c86576040516370a0823160e01b8152306004820152906020826024816001600160a01b0389165afa918215610b8e578692610c4e575b508573fbef475155294d7ef054f2b79b908c91a9914d823b15610115576040516314336cb760e11b81526001600160a01b0387166004820152918290602490829073fbef475155294d7ef054f2b79b908c91a9914d825af18015610b8e57610c1e575b506040516370a0823160e01b8152306004820152906020826024816001600160a01b0389165afa918215610b8e578692610bea575b5080820391808311610bd65714610b99576109b9826114be565b6040518281526001600160a01b03861691907f64b375e23d0a49242bbe0bf3b00b33b24b578ce73115cb608c1d6b16619abaf190602090a360405163a9059cbb60e01b81526001600160a01b03841660048201526024810182905260208180604481010381896001600160a01b038a165af1908115610b8e578691610b6f575b5015610b2a57610b0282610a6d7f34ddb4977c7a6a68d953dc3ba5fd644201e8a9393f14165b9337c4b21841818d946114be565b604080516001600160a01b03898116825260208201879052881692917f894cd3fd07f280a6b5905bd88c369c8cae8efaca3de6d2f722094d9a9b5fe15391a38260056040516020818551610ac48183858a0161125d565b81016004815203019020015560066040516020818451610ae7818385890161125d565b8101600481520301902001600160ff198254161790556114be565b604080516001600160a01b039687168152602081019390935293909416939290a36001815580f35b60405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220746f206d65726368616e74206661696c656400000000006044820152606490fd5b610b88915060203d6020116103e1576103d381836112eb565b38610a39565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152601560248201527411985b881d1bdad95b881cddd85c0819985a5b1959605a1b6044820152606490fd5b634e487b7160e01b87526011600452602487fd5b9091506020813d602011610c16575b81610c06602093836112eb565b8101031261028a5751903861099f565b3d9150610bf9565b67ffffffffffffffff8196929611610c3a57604052933861096a565b634e487b7160e01b82526041600452602482fd5b9091506020813d602011610c7e575b81610c6a602093836112eb565b81010312610c7a57519038610907565b8580fd5b3d9150610c5d565b60405162461bcd60e51b815260206004820152601a60248201527f4e6f206c697175696469747920666f722066616e20746f6b656e0000000000006044820152606490fd5b90506020813d602011610cf5575b81610ce6602093836112eb565b81010312610c7a5751386108cd565b3d9150610cd9565b0151905038806107ea565b90848a5260208a20918a5b601f1985168110610d5c5750926007949260019260e09583601f19811610610d43575b505050811b0184556107ff565b015160001960f88460031b161c19169055388080610d36565b91926020600181928685015181550194019201610d13565b848a5260208a20601f840160051c810160208510610dae575b601f830160051c82018110610da35750506107cb565b8b8155600101610d8d565b5080610d8d565b634e487b7160e01b89526041600452602489fd5b60405162461bcd60e51b815260206004820152600f60248201526e139bc810d216881c9958d95a5d9959608a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c69642066616e20746f6b656e20616d6f756e7400000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b2103330b7103a37b5b2b760791b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081b595c98da185b9d60821b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c185e5b595b9d08125160721b6044820152606490fd5b8380fd5b8280fd5b60405162461bcd60e51b815260206004820152601960248201527f4d65737361676520616c72656164792070726f636573736564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b2b73232b960911b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21037b934b3b4b7103237b6b0b4b760591b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527509edcd8f24090f2e0cae4d8c2dcca40dac2d2d8c4def60531b6044820152606490fd5b50346101155780600319360112610115576002546040516001600160a01b039091168152602090f35b5034610115576020806003193601126111b05760043567ffffffffffffffff8111610ef457918161109461117e94369060040161122f565b9260e06040516110a3816112b8565b6060815282858201528260408201528260608201528260808201528260a08201528260c0820152015282604051938492833781016004815203019020604051916110ec836112b8565b6110f5826113ac565b835260018060a01b0380600184015416928285019384528160028201541691604086019283526003820154606087019081526004830154906080880191825260058401549260a08901938452600760ff6006870154169560c08b01961515875201549560e08a01968752816040519b8c9b8a8d52518c6101009b8c9101526101208d0190611280565b99511660408b0152511660608901525160808801525160a08701525160c086015251151560e085015251908301520390f35b5080fd5b5034610115576020366003190112610115576111ce611219565b6111d6611452565b60018060a01b03166001600160601b0360a01b600254161760025580f35b9050346111b057816003193601126111b05760209063ffffffff60025460a01c168152f35b600435906001600160a01b038216820361028a57565b9181601f8401121561028a5782359167ffffffffffffffff831161028a576020838186019501011161028a57565b60005b8381106112705750506000910152565b8181015183820152602001611260565b906020916112998151809281855285808601910161125d565b601f01601f1916010190565b6004359063ffffffff8216820361028a57565b610100810190811067ffffffffffffffff8211176112d557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176112d557604052565b92919267ffffffffffffffff82116112d55760405191611337601f8201601f1916602001846112eb565b82948184528183011161028a578281602093846000960137010152565b9080601f8301121561028a5781602061136f9335910161130d565b90565b90600182811c921680156113a2575b602083101461138c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611381565b90604051918260008254926113c084611372565b90818452600194858116908160001461142f57506001146113ec575b50506113ea925003836112eb565b565b9093915060005260209081600020936000915b8183106114175750506113ea935082010138806113dc565b855488840185015294850194879450918301916113ff565b9150506113ea94506020925060ff191682840152151560051b82010138806113dc565b6001546001600160a01b0316330361146657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b35906001600160a01b038216820361028a57565b6114d69060206040519282848094519384920161125d565b810103902090565b9081602091031261028a5751801515810361028a579056fea264697066735822122070c69c37ef021c016497b70b6ee574971b3fc07200d04f3f7ecdd4530d37e06864736f6c63430008130033";

type PaymentProcessorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentProcessor__factory extends ContractFactory {
  constructor(...args: PaymentProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _hyperlaneMailbox: AddressLike,
    _paymentGateway: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _hyperlaneMailbox,
      _paymentGateway,
      overrides || {}
    );
  }
  override deploy(
    _hyperlaneMailbox: AddressLike,
    _paymentGateway: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _hyperlaneMailbox,
      _paymentGateway,
      overrides || {}
    ) as Promise<
      PaymentProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PaymentProcessor__factory {
    return super.connect(runner) as PaymentProcessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentProcessorInterface {
    return new Interface(_abi) as PaymentProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PaymentProcessor {
    return new Contract(address, _abi, runner) as unknown as PaymentProcessor;
  }
}
