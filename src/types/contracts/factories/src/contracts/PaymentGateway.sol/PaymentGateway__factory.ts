/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PaymentGateway,
  PaymentGatewayInterface,
} from "../../../../src/contracts/PaymentGateway.sol/PaymentGateway";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mchzAmount",
        type: "uint256",
      },
    ],
    name: "BridgeInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fanTokenAmount",
        type: "uint256",
      },
    ],
    name: "PaymentInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mchzAmount",
        type: "uint256",
      },
    ],
    name: "SwapCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fanTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMchzOut",
        type: "uint256",
      },
    ],
    name: "executePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
    ],
    name: "getPayment",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "paymentId",
            type: "string",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "merchant",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fanToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fanTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mchzAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "hyperlaneMessageId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
        ],
        internalType: "struct PaymentGateway.Payment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "getPaymentByMessageId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "paymentId",
            type: "string",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "merchant",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fanToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fanTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mchzAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "hyperlaneMessageId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
        ],
        internalType: "struct PaymentGateway.Payment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mchzAmount",
        type: "uint256",
      },
    ],
    name: "getQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "paymentTokenNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messageToPaymentId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "string",
        name: "paymentId",
        type: "string",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "fanToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fanTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mchzAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "hyperlaneMessageId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461005e57600160008181558154336001600160a01b0319821681179093556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36116d590816100648239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063566a3c7c146111c85780636b440de214611173578063715018a61461111657806382c0ab21146110275780638da5cb5b14610ffe5780639e281a9814610f36578063c69207a314610e4c578063e086e5ec14610e08578063f0a4039314610263578063f2fde38b1461019a5763f94687131461009557600080fd5b346101955760203660031901126101955760043567ffffffffffffffff81116101955736602382011215610195576100f260206100df61015f93369060248160040135910161145b565b8160405193828580945193849201611343565b810160028152030190206101058161129d565b9060018060a01b0380600183015416918160028201541691806003830154169060048301549060058401541660068401549160078501549360ff6009600888015497015416966040519a8b9a610140808d528c0190611366565b9860208b015260408a01526060890152608088015260a087015260c086015260e085015261010084015215156101208301520390f35b600080fd5b34610195576020366003190112610195576101b3611417565b6101bb6114a2565b6001600160a01b0390811690811561020f57600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101955760e03660031901126101955760043567ffffffffffffffff81116101955761029490369060040161142d565b602435906001600160a01b0382168203610195576064356001600160a01b038116810361019557608435926001600160a01b038416840361019557600260005414610dc35760026000558215610d89576040518386823760028185019081528190036020019020600101546001600160a01b0316610d44576001600160a01b038116731c7d4b196cb0c7b01d743fbc6116a902379c7238148015610d1e575b15610cd95760443515610c9b576001600160a01b03821615610c56576001600160a01b03841615610c115760a43515610bcc5760405161037281611242565b61037d36858861145b565b81523360208201526001600160a01b038381166040808401919091528382166060840152604435608084015290861660a083015260a43560c0830152600060e08301819052610100830181905261012083015251848782376020818681016002815203019020815180519067ffffffffffffffff821161099b5761040b826104058554611208565b856114fa565b602090601f8311600114610b5c5791806101209492600994600092610b51575b50508160011b916000199060031b1c19161781555b6001810160018060a01b03602086015116906bffffffffffffffffffffffff60a01b91828254161790556002820160018060a01b03604087015116828254161790556003820160018060a01b036060870151168282541617905560808501516004830155600582019060018060a01b0360a0870151169082541617905560c0840151600682015560e08401516007820155610100840151600882015501910151151560ff801983541691161790556040518386823760008482019081528190039020604080516001600160a01b03848116825260443560208301528781169282019290925260a43560608201529084169133917f1972dd5828c90d9d8ad8f12419f78d57c2ef63f450be27e05280d4bada42425190608090a46040516323b872dd60e01b8152336004820152306024820152604480359082015260208160648160006001600160a01b0387165af19081156109e557600091610b32575b5015610aed5760405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d600482015260448035602483015260209082908160006001600160a01b0387165af19081156109e557600091610ace575b5015610a9757604051906106098261125f565b6002825260403660208401376001600160a01b031661062782611566565b5273da1fe1db9b04a810cbb214a294667833e4c8d8f761064682611589565b5261012c42014211610a8157600061068a91604051809381926338ed173960e01b8352604435600484015260c435602484015260a0604484015260a4830190611615565b30606483015261012c42016084830152038183737a250d5630b4cf539739df2c5dacb4c659f2488d5af180156109e5576106cc91600091610a5e575b50611589565b519283600760405185888237602081878101600281520301902001556040518386823780848101600081520390207f3e3806ccf20061002b91d4f4083a8ac93b060d2dd54af8a42400fe0e713b2ea66020604051878152a261072f36848761145b565b60405163095ea7b360e01b815273eb2a0b7aaadd23851c08b963c3f4fbe00b897c04600482015260248101869052602081604481600073da1fe1db9b04a810cbb214a294667833e4c8d8f75af19081156109e557600091610a2f575b50156109f1576107e0926107b0926040519384936080602086015260a0850190611366565b6001600160a01b0392831660408501529116606083015260a4356080830152819003601f1981019091529061127b565b60405163206d3a2d60e21b815262015b32600482015273123456789012345678901234567890123456789060248201526044810183905292602084606481600073eb2a0b7aaadd23851c08b963c3f4fbe00b897c045af19384156109e5576000946109b1575b508360086040518484823760208186810160028152030190200155836000526003602052604060002067ffffffffffffffff831161099b576108928361088c8354611208565b836114fa565b6000601f841160011461090f579183917f79797b078516029af81f4b555a8e8090178c741d1853adfd7b87ddff4ef8493f94602094600091610904575b508360011b906000198560031b1c19161790555b81604051928392833781016000815203902092604051908152a36001600055005b9050820135886108cf565b601f198416908260005260206000209160005b8181106109835750918593917f79797b078516029af81f4b555a8e8090178c741d1853adfd7b87ddff4ef8493f966020969410610969575b5050600183811b0190556108e3565b830135600019600386901b60f8161c19169055878061095a565b91926020600181928689013581550194019201610922565b634e487b7160e01b600052604160045260246000fd5b9093506020813d6020116109dd575b816109cd6020938361127b565b8101031261019557519284610846565b3d91506109c0565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152602060048201526016602482015275109c9a5919d948185c1c1c9bdd985b0819985a5b195960521b6044820152606490fd5b610a51915060203d602011610a57575b610a49818361127b565b81019061154e565b8761078b565b503d610a3f565b610a7b91503d806000833e610a73818361127b565b810190611599565b866106c6565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152600f60248201526e105c1c1c9bdd985b0819985a5b1959608a1b6044820152606490fd5b610ae7915060203d602011610a5757610a49818361127b565b866105f6565b60405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7420746f6b656e207472616e73666572206661696c65640000006044820152606490fd5b610b4b915060203d602011610a5757610a49818361127b565b8661059d565b015190508b8061042b565b908360005260206000209160005b601f1985168110610bb4575092610120949260019260099583601f19811610610b9b575b505050811b018155610440565b015160001960f88460031b161c191690558b8080610b8e565b91926020600181928685015181550194019201610b6a565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c69642066616e20746f6b656e20616d6f756e7400000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f496e76616c69642066616e20746f6b656e2061646472657373000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d65726368616e74206164647265737300000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c185e5b595b9d08185b5bdd5b9d60521b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f556e737570706f72746564207061796d656e7420746f6b656e000000000000006044820152606490fd5b506001600160a01b038116737169d38820dfd117c3fa1f22a697dba58d90ba0614610333565b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e7420494420616c726561647920657869737473000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c185e5b595b9d08125160721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b3461019557600036600319011261019557610e216114a2565b600080808060018060a01b03600154164790828215610e43575bf1156109e557005b506108fc610e3b565b346101955760203660031901126101955760043567ffffffffffffffff8111610195576020610e82610f3292369060040161142d565b9190610e8c611652565b508260405193849283378101600281520301902060ff600960405192610eb184611242565b610eba8161129d565b845260018060a01b038060018301541660208601528060028301541660408601528060038301541660608601526004820154608086015260058201541660a0850152600681015460c0850152600781015460e0850152600881015461010085015201541615156101208201526040519182918261138b565b0390f35b3461019557604036600319011261019557610f4f611417565b610f576114a2565b60015460405163a9059cbb60e01b81526001600160a01b03918216600482015260248035908201529160209183916044918391600091165af19081156109e557600091610fe0575b5015610fa757005b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b610ff8915060203d8111610a5757610a49818361127b565b81610f9f565b34610195576000366003190112610195576001546040516001600160a01b039091168152602090f35b34610195576040366003190112610195576110bd6000611045611417565b604051906110528261125f565b60028252604036602084013761106782611566565b6001600160a01b03909116905273da1fe1db9b04a810cbb214a294667833e4c8d8f761109282611589565b526040518093819263d06ca61f60e01b83526024356004840152604060248401526044830190611615565b0381737a250d5630b4cf539739df2c5dacb4c659f2488d5afa9081156109e5576020916110f2916000916110fb575b50611566565b51604051908152f35b61111091503d806000833e610a73818361127b565b836110ec565b346101955760003660031901126101955761112f6114a2565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101955760203660031901126101955761118c611652565b506004356000526003602052610f326111ad60206100df604060002061129d565b8101600281520301902060ff600960405192610eb184611242565b34610195576020366003190112610195576004356000526003602052610f326111f4604060002061129d565b604051918291602083526020830190611366565b90600182811c92168015611238575b602083101461122257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611217565b610140810190811067ffffffffffffffff82111761099b57604052565b6060810190811067ffffffffffffffff82111761099b57604052565b90601f8019910116810190811067ffffffffffffffff82111761099b57604052565b90604051918260008254926112b184611208565b90818452600194858116908160001461132057506001146112dd575b50506112db9250038361127b565b565b9093915060005260209081600020936000915b8183106113085750506112db935082010138806112cd565b855488840185015294850194879450918301916112f0565b9150506112db94506020925060ff191682840152151560051b82010138806112cd565b60005b8381106113565750506000910152565b8181015183820152602001611346565b9060209161137f81518092818552858086019101611343565b601f01601f1916010190565b6020815281516113a961014091826020850152610160840190611366565b9260018060a01b03806020830151166040850152806040830151166060850152806060830151166080850152608082015160a085015260a08201511660c084015260c081015160e084015260e081015161010090818501528101519061012091828501520151151591015290565b600435906001600160a01b038216820361019557565b9181601f840112156101955782359167ffffffffffffffff8311610195576020838186019501011161019557565b92919267ffffffffffffffff821161099b5760405191611485601f8201601f19166020018461127b565b829481845281830111610195578281602093846000960137010152565b6001546001600160a01b031633036114b657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f811161150857505050565b600091825260208220906020601f850160051c83019410611544575b601f0160051c01915b82811061153957505050565b81815560010161152d565b9092508290611524565b90816020910312610195575180151581036101955790565b8051156115735760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156115735760400190565b90602090818382031261019557825167ffffffffffffffff93848211610195570181601f8201121561019557805193841161099b578360051b90604051946115e38584018761127b565b85528380860192820101928311610195578301905b828210611606575050505090565b815181529083019083016115f8565b90815180825260208080930193019160005b828110611635575050505090565b83516001600160a01b031685529381019392810192600101611627565b6040519061165f82611242565b81606081526101206000918260208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152015256fea26469706673582212203590b5f91c4ae414a85f7bddb8a7ec766ed9e47c78263af3ff05ffd51b579eee64736f6c63430008130033";

type PaymentGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentGateway__factory extends ContractFactory {
  constructor(...args: PaymentGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PaymentGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PaymentGateway__factory {
    return super.connect(runner) as PaymentGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentGatewayInterface {
    return new Interface(_abi) as PaymentGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PaymentGateway {
    return new Contract(address, _abi, runner) as unknown as PaymentGateway;
  }
}
